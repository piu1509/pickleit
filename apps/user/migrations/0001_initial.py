# Generated by Django 5.1 on 2024-08-20 06:29

import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, max_length=150, null=True)),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete')], max_length=10)),
                ('model_name', models.CharField(max_length=100)),
                ('instance_id', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('secret_key', models.CharField(max_length=250, unique=True)),
                ('email', models.EmailField(blank=True, max_length=250, null=True, unique=True)),
                ('username', models.CharField(blank=True, max_length=250, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=250, null=True)),
                ('last_name', models.CharField(blank=True, max_length=250, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('user_birthday', models.DateField(blank=True, null=True)),
                ('bio', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_images/')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=250, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('rank', models.CharField(default='1', max_length=255)),
                ('is_rank', models.BooleanField(default=False)),
                ('fb_link', models.TextField(blank=True, null=True)),
                ('twitter_link', models.TextField(blank=True, null=True)),
                ('youtube_link', models.TextField(blank=True, null=True)),
                ('tictok_link', models.TextField(blank=True, null=True)),
                ('instagram_link', models.TextField(blank=True, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=250, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_team_manager', models.BooleanField(default=False)),
                ('is_coach', models.BooleanField(default=False)),
                ('is_player', models.BooleanField(default=False)),
                ('is_organizer', models.BooleanField(default=False)),
                ('is_organizer_expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_ambassador', models.BooleanField(default=False)),
                ('is_ambassador_expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_merchant', models.BooleanField(default=False)),
                ('is_sponsor', models.BooleanField(default=False)),
                ('is_sponsor_expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('password_raw', models.CharField(blank=True, max_length=250, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('generated_otp', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_screen', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.role')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update', models.CharField(max_length=100)),
                ('updated_users', models.ManyToManyField(blank=True, related_name='app_updates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BasicQuestionsUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('options', models.JSONField()),
                ('question_for', models.CharField(blank=True, choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced'), ('All', 'All')], max_length=25, null=True)),
                ('when_ans', models.CharField(blank=True, max_length=25, null=True)),
                ('is_last', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_questions', to='user.basicquestionsuser')),
            ],
        ),
        migrations.CreateModel(
            name='FCMTokenStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fcm_token', models.JSONField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IsSponsorDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('secret_key', models.CharField(max_length=250, unique=True)),
                ('league_uuid', models.CharField(blank=True, max_length=250, null=True)),
                ('league_secret_key', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sponsor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sponsor', to=settings.AUTH_USER_MODEL)),
                ('sponsor_added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sponsor_added_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchingPlayers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_from', models.DateField(blank=True, null=True)),
                ('available_to', models.DateField(blank=True, null=True)),
                ('preference', models.CharField(blank=True, choices=[('Singles', 'Singles'), ('Doubles', 'Doubles'), ('Co-ed', 'Co-ed')], max_length=25, null=True)),
                ('self_rank', models.CharField(blank=True, default=1, max_length=5, null=True)),
                ('rank1_range', models.CharField(blank=True, max_length=5, null=True)),
                ('rank2_range', models.CharField(blank=True, max_length=5, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.CharField(blank=True, max_length=20, null=True)),
                ('longitude', models.CharField(blank=True, max_length=20, null=True)),
                ('matching_image', models.ImageField(blank=True, null=True, upload_to='matching_player_image/')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matching_player', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PDFFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='pdf_files')),
                ('filename', models.CharField(max_length=100)),
                ('tournament', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='download_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductSellerRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('True', 'True'), ('False', 'False'), ('Rejected', 'Rejected')], default='False', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=15)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='user.basicquestionsuser')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
